# SIPSTACK Connector Configuration
# Copy this file to .env and fill in your values

# Optional: User/Group ID for file permissions
# Docker Compose will use these values to run the container as this user
# Set these to match your asterisk user (run 'id asterisk' to get values)
# Default: 1000/1000
PUID=1000
PGID=1000

# Required: SIPSTACK API Configuration
# Standard key format: sk_{32 random characters}
# Example: sk_1234567890abcdef1234567890abcdef
API_KEY=your_api_key_here
# Region options: ca1, us1, us2
REGION=us1

# Required: Asterisk AMI Configuration
# Use localhost with --network host
AMI_HOST=localhost
AMI_PORT=5038
# Must match section name in manager.conf
AMI_USERNAME=manager-sipstack
AMI_PASSWORD=your_secure_password

# Optional: Host Identification
# Set the hostname to identify this node (defaults to system hostname)
# Use this when running in Docker with --network host to set the parent host's name
HOST_HOSTNAME=

# Optional: CDR Processing
# Enable/disable CDR (Call Detail Record) processing
CDR_ENABLED=true
# Mode: 'batch' (default) or 'direct' (immediate sending)
CDR_MODE=batch
# Number of CDRs to batch before sending (batch mode)
CDR_BATCH_SIZE=100
# Seconds to wait before sending partial batch (batch mode)
CDR_BATCH_TIMEOUT=30
# Force flush interval in seconds - prevents indefinite blocking (batch mode)
CDR_BATCH_FORCE_TIMEOUT=5
# Maximum CDRs to queue (drops oldest if full)
CDR_QUEUE_SIZE=10000
# Maximum retry attempts for failed batches
CDR_MAX_RETRIES=3
# Maximum concurrent API requests (direct mode)
CDR_MAX_CONCURRENT=10

# Optional: CDR Filtering (minimal filtering for maximum analytics value)
# Enable CDR filtering to reduce noise
CDR_FILTER_ENABLED=false
# Filter out queue distribution attempts (keep for analytics)
CDR_FILTER_QUEUE_ATTEMPTS=false
# Filter out zero duration calls (keep for analytics)
CDR_FILTER_ZERO_DURATION=false
# Filter to only internal calls (both src and dst are extensions)
CDR_FILTER_INTERNAL_ONLY=false
# Minimum call duration in seconds (0 = disabled)
CDR_FILTER_MIN_DURATION=0
# Comma-separated list of destinations to exclude
# We only exclude 'h' (hangup handlers) as they provide no value
# Keep 's' destinations for queue/IVR analytics
# With linkedid support, we can reconstruct full call flows
CDR_FILTER_EXCLUDE_DST=h


# Optional: Recording File Watcher
# Enable monitoring of recording directories for new files
RECORDING_WATCHER_ENABLED=false
# Comma-separated list of directories to watch (recursive)
RECORDING_WATCH_PATHS=/var/spool/asterisk/monitor
# Comma-separated list of file extensions to process (without dots)
RECORDING_FILE_EXTENSIONS=wav,mp3,gsm
# Minimum file size in bytes (filters out empty files)
RECORDING_MIN_FILE_SIZE=1024
# Time to wait for file to stabilize before processing (seconds)
RECORDING_STABILIZATION_TIME=2.0
# Process existing files on startup
RECORDING_PROCESS_EXISTING=false
# Delete recording files after successful upload
RECORDING_DELETE_AFTER_UPLOAD=false

# Optional: Recording Filters
# Comma-separated patterns that must be in filename to process
RECORDING_INCLUDE_PATTERNS=
# Comma-separated patterns to exclude from processing
RECORDING_EXCLUDE_PATTERNS=
# Minimum recording duration in seconds (0 = disabled)
RECORDING_MIN_DURATION=0
# Maximum age of recordings to process in hours (24 = 1 day)
RECORDING_MAX_AGE_HOURS=24

# Optional: Performance Tuning
LOG_LEVEL=DEBUG
# API request timeout in seconds
API_TIMEOUT=30

# Optional: Monitoring
MONITORING_ENABLED=false
MONITORING_PORT=8000
